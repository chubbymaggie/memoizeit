EDU.purdue.cs.bloat.codegen.Liveness$1:next()
EDU.purdue.cs.bloat.util.Graph$2:next()
EDU.purdue.cs.bloat.util.Graph$3:next()
EDU.purdue.cs.bloat.util.Graph$4:next()
net.sourceforge.pmd.jaxen.NodeIterator:next()
com.lowagie.text.pdf.BaseFont:createFont(java.lang.String,java.lang.String,boolean)
com.lowagie.text.Document:close()
com.lowagie.text.pdf.PdfWriter:addSharedObjectsToBody()
com.lowagie.text.pdf.PdfWriter:close()
com.lowagie.text.pdf.DefaultFontMapper:awtToPdf(java.awt.Font)
com.lowagie.text.pdf.PdfGraphics2D:<init>(com.lowagie.text.pdf.PdfContentByte,float,float,com.lowagie.text.pdf.FontMapper)
com.lowagie.text.pdf.PdfFormXObject:<init>(com.lowagie.text.pdf.PdfTemplate)
com.lowagie.text.pdf.PdfDocument:close()
com.lowagie.text.pdf.BaseFont:createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[])
com.lowagie.text.pdf.Type1Font:<init>(java.lang.String,java.lang.String,boolean,byte[],byte[])
com.lowagie.text.pdf.PdfTemplate:getFormXObject()
com.lowagie.text.pdf.PdfGraphics2D:getCachedBaseFont(java.awt.Font)
com.lowagie.text.pdf.Type1Font:process(com.lowagie.text.pdf.RandomAccessFileOrArray)
com.lowagie.text.pdf.PdfContentByte:createGraphics(float,float,com.lowagie.text.pdf.FontMapper)
com.lowagie.text.pdf.PdfStream:flateCompress()
com.lowagie.text.pdf.PdfGraphics2D:setFont(java.awt.Font)
com.lowagie.text.pdf.PdfWriter:getInstance(com.lowagie.text.Document,java.io.OutputStream)
dacapo.chart.Datasets:createPointerDistData(java.net.URL,boolean,boolean,int)
dacapo.chart.Datasets:createPointerAgeData(java.net.URL,boolean,boolean,boolean,int)
dacapo.chart.Datasets:createHeapData(java.net.URL,boolean,int,int)
dacapo.chart.Datasets:getMaxCohorts(java.net.URL)
dacapo.chart.Datasets:getLineDataset(java.net.URL,int,int,int)
dacapo.chart.Graph:<init>(java.net.URL,int,java.lang.String,int)
dacapo.chart.Graph:plotGraph(java.net.URL,java.lang.String,java.lang.String,int,int,int,int,int,boolean)
dacapo.luindex.LuindexHarness:indexDocs(org.apache.lucene.index.IndexWriter,java.io.File)
dacapo.Benchmark:deleteTree(java.io.File)
dacapo.FileDigest:getText(java.io.File,boolean,java.io.File)
dacapo.FileDigest:get(java.lang.String,boolean,boolean,java.io.File)
dacapo.parser.ConfigFile:sizeClause(dacapo.parser.Config,java.lang.String)
dacapo.parser.ConfigFileTokenManager:getNextToken()
dacapo.parser.ConfigFile:jj_consume_token(int)
dacapo.parser.ConfigFileTokenManager:jjMoveStringLiteralDfa0_0()
dacapo.parser.ConfigFileTokenManager:jjMoveNfa_0(int,int)
dacapo.parser.ConfigFile:string()
dacapo.parser.ConfigFile:sizeSpec(dacapo.parser.Config)
dacapo.parser.ConfigFile:jj_ntk()
dacapo.TeeOutputStream:write(int)
org.apache.xerces.parsers.ObjectFactory:createObject(java.lang.String,java.lang.String,java.lang.String)
org.apache.xerces.impl.dtd.XMLDTDValidator:startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)
org.apache.xerces.impl.XMLDocumentScannerImpl:startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)
org.apache.xerces.parsers.AbstractSAXParser:endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)
org.apache.xerces.parsers.AbstractSAXParser:startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)
org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser:parse(org.xml.sax.InputSource)
org.apache.xerces.parsers.XIncludeAwareParserConfiguration:<init>()
org.apache.xerces.parsers.SAXParser:<init>()
org.apache.xerces.impl.XMLVersionDetector:startDocumentParsing(org.apache.xerces.impl.XMLEntityHandler,short)
org.apache.xerces.impl.XMLNSDocumentScannerImpl:scanStartElement()
org.apache.xerces.impl.XMLNSDocumentScannerImpl:scanEndElement()
org.apache.xerces.parsers.SAXParser:<init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)
org.apache.xerces.parsers.ObjectFactory:newInstance(java.lang.String,java.lang.ClassLoader,boolean)
org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:scanDocument(boolean)
org.apache.xerces.jaxp.SAXParserFactoryImpl:newSAXParser()
org.apache.xerces.parsers.ObjectFactory:createObject(java.lang.String,java.lang.String)
org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:dispatch(boolean)
org.apache.xerces.parsers.XML11Configuration:parse(boolean)
org.apache.xerces.parsers.XIncludeAwareParserConfiguration:<init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)
org.apache.xerces.parsers.XML11Configuration:<init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)
org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser:<init>(org.apache.xerces.jaxp.SAXParserImpl)
org.apache.xerces.parsers.AbstractSAXParser:parse(org.xml.sax.InputSource)
org.apache.xerces.parsers.AbstractSAXParser:startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)
org.apache.xerces.jaxp.SAXParserImpl:<init>(org.apache.xerces.jaxp.SAXParserFactoryImpl,java.util.Hashtable,boolean)
org.apache.xerces.parsers.XMLParser:parse(org.apache.xerces.xni.parser.XMLInputSource)
org.apache.xerces.parsers.XML11Configuration:parse(org.apache.xerces.xni.parser.XMLInputSource)
org.apache.xerces.impl.XMLNSDocumentScannerImpl:scanAttribute(org.apache.xerces.util.XMLAttributesImpl)
org.apache.xerces.impl.XMLNSDocumentScannerImpl:<init>()
org.apache.xerces.impl.XMLDocumentScannerImpl:<init>()
org.jaxen.saxpath.base.XPathReader:additiveExpr()
org.jaxen.BaseXPath:selectNodesForContext(org.jaxen.Context)
org.jaxen.expr.DefaultAbsoluteLocationPath:evaluate(org.jaxen.Context)
org.jaxen.expr.DefaultEqualityExpr:evaluate(org.jaxen.Context)
org.jaxen.expr.DefaultPredicate:evaluate(org.jaxen.Context)
org.jaxen.expr.DefaultFunctionCallExpr:evaluate(org.jaxen.Context)
org.jaxen.expr.DefaultOrExpr:evaluate(org.jaxen.Context)
org.jaxen.expr.DefaultStep:evaluate(org.jaxen.Context)
org.jaxen.saxpath.base.XPathReader:equalityExpr()
org.jaxen.expr.DefaultAndExpr:evaluate(org.jaxen.Context)
org.jaxen.expr.DefaultUnionExpr:evaluate(org.jaxen.Context)
org.jaxen.saxpath.base.XPathReader:multiplicativeExpr()
org.jaxen.saxpath.base.XPathReader:relationalExpr()
org.jaxen.expr.DefaultFunctionCallExpr:evaluateParams(org.jaxen.Context)
org.jaxen.expr.DefaultLocationPath:evaluate(org.jaxen.Context)
org.jaxen.saxpath.base.XPathReader:andExpr()
org.jaxen.expr.DefaultXPathExpr:asList(org.jaxen.Context)
org.jaxen.saxpath.base.XPathReader:orExpr()
org.jaxen.BaseXPath:selectNodes(java.lang.Object)
org.jaxen.saxpath.base.XPathReader:expr()
org.jaxen.expr.DefaultNameStep:evaluate(org.jaxen.Context)
org.jaxen.saxpath.base.XPathReader:locationPath(boolean)
org.jaxen.saxpath.base.XPathReader:step()
org.jaxen.expr.DefaultEqualityExpr:evaluateSetSet(java.util.List,java.util.List,org.jaxen.Navigator)
org.jaxen.saxpath.base.XPathReader:pathExpr()
org.jaxen.BaseXPath:<init>(java.lang.String,org.jaxen.Navigator)
org.jaxen.saxpath.base.XPathReader:unaryExpr()
org.jaxen.BaseXPath:<init>(java.lang.String)
org.jaxen.saxpath.base.XPathReader:unionExpr()
org.jaxen.saxpath.base.XPathReader:steps()
antlr.RecognitionException:<init>(java.lang.String,java.lang.String,int,int)
antlr.ANTLRException:<init>(java.lang.String)
antlr.NoViableAltForCharException:<init>(char,java.lang.String,int,int)
antlr.MismatchedTokenException:<init>(String[],antlr.Token,int,boolean,java.lang.String)
org.apache.commons.beanutils.PropertyUtilsBean:getPropertyDescriptors(java.lang.Object)
org.apache.commons.beanutils.PropertyUtilsBean:getPropertyDescriptor(java.lang.Object,java.lang.String)
org.apache.commons.beanutils.PropertyUtilsBean:getPropertyDescriptors(java.lang.Class)
org.apache.commons.beanutils.WeakFastHashMap:cloneMap(java.util.Map)
org.apache.commons.beanutils.WeakFastHashMap:put(java.lang.Object,java.lang.Object)
org.apache.commons.beanutils.WeakFastHashMap:createMap(java.util.Map)
org.apache.commons.beanutils.ConvertUtilsBean:registerArrays(boolean,int)
org.apache.commons.beanutils.ConvertUtilsBean:registerArrayConverter(java.lang.Class,org.apache.commons.beanutils.Converter,boolean,int)
org.apache.commons.beanutils.ConvertUtilsBean:deregister()
org.apache.commons.beanutils.ConvertUtilsBean:<init>()
org.apache.commons.beanutils.ConvertUtilsBean:registerStandard(boolean,boolean)
org.apache.commons.beanutils.ConvertUtilsBean:register(org.apache.commons.beanutils.Converter,java.lang.Class)
org.apache.commons.beanutils.ConvertUtilsBean:registerPrimitives(boolean)
org.apache.commons.logging.LogFactory:getFactory()
org.apache.commons.logging.LogFactory:directGetContextClassLoader()
org.apache.commons.logging.LogFactory:getLog(java.lang.Class)
org.apache.commons.logging.LogFactory$1:run()
org.apache.commons.logging.LogFactory:getContextClassLoaderInternal()
org.apache.commons.beanutils.converters.AbstractConverter:setDefaultValue(java.lang.Object)
org.apache.commons.beanutils.converters.ArrayConverter:<init>(java.lang.Class,org.apache.commons.beanutils.Converter,int)
org.apache.commons.beanutils.BeanUtilsBean:copyProperty(java.lang.Object,java.lang.String,java.lang.Object)
org.apache.commons.beanutils.converters.NumberConverter:<init>(boolean,java.lang.Object)
java.lang.StringBuilder:append(java.lang.Object)
java.lang.String:valueOf(java.lang.Object)
java.lang.String:intern()
java.util.ArrayList:<init>()
java.util.ArrayList:listIterator()
java.util.ArrayList:addAll(java.util.Collection)
java.util.ArrayList:add(java.lang.Object)
java.util.AbstractCollection:addAll(java.util.Collection)
java.util.HashMap:<init>(int,float)
java.util.HashMap:put(java.lang.Object,java.lang.Object)
java.util.HashMap:get(java.lang.Object)
java.util.HashSet:add(java.lang.Object)
java.util.HashSet:contains(java.lang.Object)
java.util.TreeSet:add(java.lang.Object)
com.google.common.collect.Sets:newTreeSet(java.lang.Iterable)